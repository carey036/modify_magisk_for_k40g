name: Build alpha magisk for k40g

on: 
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 22 * * 3'
jobs:
  build:
    name: Build on ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    env:
      NDK_CCACHE: ${{ github.workspace }}/ccache
      CCACHE_DIR: ${{ github.workspace }}/.ccache

    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          repository: "vvb2060/Magisk"
          ref: 'alpha'
          submodules: 'recursive'
          fetch-depth: 0

      - name: Edit for k40g
        run: |
          sed -i '/# Sign chromeos boot/ i ui_print "- rebuild for k40g酷安@响當當"\n.\/magiskboot hexpatch new-boot.img "0300000000617662746F6F6C20" "0000000000617662746F6F6C20"' ./scripts/boot_patch.sh
          sed -i 's/主页/主页(k40g n10p)/' ./app/src/main/res/values-zh-rCN/strings.xml
          wget -O magisk.jks https://cdn.jsdelivr.net/gh/carey036/modify_magisk_for_k40g/magisk.jks
          sed -i '/keyStore/d' config.prop.sample
          sed -i '/keyStorePass/d' config.prop.sample
          sed -i '/keyPass/d' config.prop.sample
          sed -i '/keyAlias/d' config.prop.sample
          sed -i '/outdir/d' config.prop.sample
          sed -i '/version/d' config.prop.sample
          echo "version="`git log -1 --format='%h'` >> config.prop.sample
          echo "outdir=out" >> config.prop.sample
          echo "keyStore=./magisk.jks" >> config.prop.sample
          echo "keyStorePass=magisk" >> config.prop.sample
          echo "keyAlias=xingsuo" >> config.prop.sample
          echo "keyPass=magisk" >> config.prop.sample
          cat config.prop.sample > config.prop
          cat>>./app/src/main/res/raw/manager.sh<<EOF
          restore_imgs() {
            [ -z \$SHA1 ] && return 1
            local BACKUPDIR=/data/magisk_backup_\$SHA1
            [ -d \$BACKUPDIR ] || return 1

            get_flags
            find_boot_image

            for name in dtb dtbo; do
              [ -f \$BACKUPDIR/\${name}.img.gz ] || continue
              local IMAGE=\$(find_block \$name\$SLOT)
              [ -z \$IMAGE ] && continue
              flash_image \$BACKUPDIR/\${name}.img.gz \$IMAGE
            done
            [ -f \$BACKUPDIR/boot.img.gz ] || return 1
            rm \$BOOTIMAGE
            gzip -d \$BACKUPDIR/boot.img.gz
            dd if=\$BACKUPDIR/boot.img of=\$BOOTIMAGE
            gzip \$BACKUPDIR/boot.img
            #flash_image \$BACKUPDIR/boot.img.gz \$BOOTIMAGE && rm -rf \$BACKUPDIR
          }
          EOF

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up ccache
        run: bash .github/ccache.sh

      - name: Cache Gradle dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            !~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache build cache
        uses: actions/cache@v2
        with:
          path: |
            ${{ github.workspace }}/.ccache
            ~/.gradle/caches/build-cache-*
          key: ${{ runner.os }}-build-cache-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-cache-

      - name: Set up NDK
        run: python build.py -v ndk

      - name: Build release
        run: |
          ./ccache -zp
          echo 'org.gradle.jvmargs=-Xmx3096m' >> gradle.properties
          python build.py -vr all
          cp -f ./out/app-release.apk /opt/Magisk_alpha_app.apk
          cp -f ./out/stub-release.apk /opt/Magisk_alpha_stub.apk
          echo `git log -1 --format='%h'` > /opt/MagiskVersion.prop
#      - name: Build debug
#        run: |
#          python build.py -v all
#          ./ccache -s
      - name: Stop gradle daemon
        run: ./gradlew --stop

      # Only upload artifacts built on Linux
      - name: Upload build artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          path: out
      
      #upload file to repo
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: upload to repo
        run: |
          cp /opt/Magisk_alpha_app.apk ./release/Magisk_alpha_app.apk
          cp /opt/Magisk_alpha_stub.apk ./release/Magisk_alpha_stub.apk
          MagiskVerison=`cat /opt/MagiskVersion.prop`
          echo '{"magisk":{"version":"'$MagiskVerison'","versionCode":"23001","link":"https://cdn.jsdelivr.net/gh/carey036/modify_magisk_for_k40g/release/Magisk_alpha_app.apk","link64":"https://cdn.jsdelivr.net/gh/carey036/modify_magisk_for_k40g/release/Magisk_alpha_app.apk","note":"https://cdn.jsdelivr.net/gh/vvb2060/Magisk@bb56d78bca333b5c60f7535eb1a4ed41a1567497/app/src/main/res/raw/changelog.md"},"stub":{"versionCode":"21","link":"https://cdn.jsdelivr.net/gh/carey036/modify_magisk_for_k40g/release/Magisk_alpha_stub.apk"}}' > ./release/alpha.json
          git config --global user.name ${{ secrets.GITHUBUSER }}
          git config --global user.email ${{ secrets.GITHUBEMAIL }}
          git add ./release/Magisk_alpha_stub.apk
          git add ./release/Magisk_alpha_app.apk
          git add ./release/alpha.json
          git commit -m 'build Alpha Magisk' && echo commit
          git push origin main && echo push!
