name: Build stable magisk for k40g

on: 
  workflow_dispatch:

jobs:
  build:
    name: Build on ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - name: Check out
        uses: actions/checkout@v2
        with:
          repository: "topjohnwu/Magisk"
          ref: '8aaa45c62a204af35da9d5366dc8b6698b1d043b'
          submodules: 'recursive'
          fetch-depth: 0
        run: wget  https://cdn.jsdelivr.net/gh/carey036/modify_magisk_for_k40g/script/edit.sh && bash edit.sh

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      - name: Set up Python 3
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Set up GitHub env (Unix)
        if: runner.os != 'Windows'
        run: |
          ndk_ver=$(sed -n 's/^magisk.fullNdkVersion=//p' gradle.properties)
          echo ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT >> $GITHUB_ENV
          echo MAGISK_NDK_VERSION=$ndk_ver >> $GITHUB_ENV

      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Cache NDK
        id: ndk-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.ANDROID_SDK_ROOT }}/ndk/magisk
          key: ${{ runner.os }}-ndk-${{ env.MAGISK_NDK_VERSION }}

      - name: Set up NDK
        if: steps.ndk-cache.outputs.cache-hit != 'true'
        run: python build.py ndk

      - name: Build release
        run: |
          python build.py -vr all
          cp -f ./out/app-release.apk /opt/Magisk_stable_app.apk

      - name: Refresh flag
        run: touch gradle.properties
        shell: bash

      # Only upload artifacts built on Linux
      - name: Upload build artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.sha }}
          path: out

      #upload file to repo
      - name: Check out
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: upload to repo
        run: |
          cp /opt/Magisk_stable_app.apk ./release/Magisk_stable_app.apk
          git config --global user.name ${{ secrets.GITHUBUSER }}
          git config --global user.email ${{ secrets.GITHUBEMAIL }}
          git add ./release/Magisk_stable_app.apk
          git commit -m 'build stable Magisk' && echo commit
          git push origin test && echo push!